[{"title":"代码模板(真·蒟蒻)","url":"/2023/05/27/%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF(%E7%9C%9F%C2%B7%E8%92%9F%E8%92%BB)/","content":"一.线段树（无优化）1.维护区间最大值(最小值)#include&lt;bits/stdc++.h&gt;#define int long long#define mid (l+r)/2#define lson l,mid,rt&lt;&lt;1#define rson mid+1,r,rt&lt;&lt;1|1using namespace std;int n,m,tag[2000005],mx[2000005];void pushup(int rt)&#123;\tmx[rt]=max(mx[rt&lt;&lt;1],mx[rt&lt;&lt;1|1]);&#125;void pushdown(int l,int r,int rt)&#123;\tint res=r-l+1;\ttag[rt&lt;&lt;1]+=tag[rt];\ttag[rt&lt;&lt;1|1]+=tag[rt];\tmx[rt&lt;&lt;1]+=tag[rt];\tmx[rt&lt;&lt;1|1]+=tag[rt];\ttag[rt]=0;&#125;void build(int l,int r,int rt)&#123;\tif(l==r)\t&#123;\t\tcin&gt;&gt;mx[rt];\t\treturn;\t&#125;\tbuild(lson);\tbuild(rson);\tpushup(rt);&#125;int query(int a,int b,int l,int r,int rt)&#123;\tif(a&lt;=l&amp;&amp;r&lt;=b)return mx[rt];\tint ans=-1;\tif(tag[rt])pushdown(l,r,rt);\tif(a&lt;=mid)ans=max(ans,query(a,b,lson));\tif(b&gt;mid)ans=max(ans,query(a,b,rson));\treturn ans;&#125;void mupdate(int l,int r,int rt,int a,int b,int num)&#123;\tif(a&lt;=l&amp;&amp;r&lt;=b)\t&#123;\t\tmx[rt]=max(num,mx[rt]);        tag[rt]+=num;\t\treturn;\t&#125;\tif(tag[rt])pushdown(l,r,rt);\tif(a&lt;=mid)mupdate(lson,a,b,num);\tif(b&gt;mid)mupdate(rson,a,b,num);\tpushup(rt);&#125;signed main()&#123;\tcin&gt;&gt;n&gt;&gt;m;\tbuild(1,n,1);\tfor(int i=1;i&lt;=m;i++)\t&#123;\t\t\t&#125;&#125;\n\n2.维护区间和#include&lt;bits/stdc++.h&gt;#define int long long#define mid (l+r)/2#define lson l,mid,rt&lt;&lt;1#define rson mid+1,r,rt&lt;&lt;1|1using namespace std;int n,m,sum[2000005],tag[2000005];void pushup(int rt)&#123;\tsum[rt]=sum[rt&lt;&lt;1]+sum[rt&lt;&lt;1|1];&#125;void pushdown(int l,int r,int rt)&#123;\tint res=r-l+1;\ttag[rt&lt;&lt;1]+=tag[rt];\ttag[rt&lt;&lt;1|1]+=tag[rt];\tsum[rt&lt;&lt;1]+=tag[rt]*(res-(res&gt;&gt;1));\tsum[rt&lt;&lt;1|1]+=tag[rt]*(res&gt;&gt;1);\ttag[rt]=0;&#125;void build(int l,int r,int rt)&#123;\tif(l==r)\t&#123;\t\tcin&gt;&gt;sum[rt];\t\treturn;\t&#125;\tbuild(lson);\tbuild(rson);\tpushup(rt);&#125;int query(int a,int b,int l,int r,int rt)&#123;\tif(a&lt;=l&amp;&amp;r&lt;=b)return sum[rt];\tint ans=0;\tif(tag[rt])pushdown(l,r,rt);\tif(a&lt;=mid)ans+=query(a,b,lson);\tif(b&gt;mid)ans+=query(a,b,rson);\treturn ans;&#125;void mupdate(int l,int r,int rt,int a,int b,int num)&#123;\tif(a&lt;=l&amp;&amp;r&lt;=b)\t&#123;\t\tsum[rt]+=(r-l+1)*num;\t\ttag[rt]+=num;\t\treturn;\t&#125;\tif(tag[rt])pushdown(l,r,rt);\tif(a&lt;=mid)mupdate(lson,a,b,num);\tif(b&gt;mid)mupdate(rson,a,b,num);\tpushup(rt);&#125;signed main()&#123;\tcin&gt;&gt;n&gt;&gt;m;\tbuild(1,n,1);\tfor(int i=1;i&lt;=m;i++)\t&#123;\t\t\t&#125;&#125;\n二.快速读写1.快读inline int read()&#123;    int x=0,f=1;\tchar ch=getchar();    while(!isdigit(ch))&#123;if (ch==&#x27;-&#x27;)f=-1;ch=getchar();&#125;    while(isdigit(ch))&#123;x=x*10+ch-48;ch=getchar();&#125;    return x*f;&#125;\n2.快输inline int write(int x)&#123;    if(x&lt;0)&#123;x=~(x-1);putchar(&#x27;-&#x27;);&#125;    if(x&gt;9)write(x/10);    putchar(x%10+&#x27;0&#x27;);&#125;\n三.最短路1.迪杰斯特拉#include&lt;bits/stdc++.h&gt;#define pi pair&lt;int,int&gt;#define inf 2147483647using namespace std;int head[100005],s,cnt=0,n,m,vis[100005],dis[100005];struct edge&#123;\tint u,v,w,nxt;&#125;e[200005];priority_queue &lt;pi,vector&lt;pi&gt;,greater&lt;pi&gt; &gt;q;void adde(int a,int b,int c)&#123;\te[++cnt].u=a;\te[cnt].v=b;\te[cnt].w=c;\te[cnt].nxt=head[a];\thead[a]=cnt;&#125;void dijkstra()&#123;\twhile(!q.empty())\t&#123;\t\tint u=q.top().second;\t\tq.pop();\t\tif(vis[u])continue;\t\tvis[u]=1;\t\tfor(int i=head[u];i;i=e[i].nxt)\t\t&#123;\t\t\tint v=e[i].v;\t\t\tif(dis[v]&gt;dis[u]+e[i].w)\t\t\t&#123;\t\t\t\tdis[v]=dis[u]+e[i].w;\t\t\t\tif(vis[v]==0)q.push(make_pair(dis[v],v)); \t\t\t&#125;\t\t&#125;\t&#125;&#125;int main()&#123;\tscanf(&quot;%d%d%d&quot;,&amp;n,&amp;m,&amp;s);\tfor(int i=1;i&lt;=m;i++)\t&#123;\t\tlong long a,b,c;\t\tscanf(&quot;%lld%lld%lld&quot;,&amp;a,&amp;b,&amp;c);\t\tadde(a,b,c);\t&#125;\tfor(int i=1;i&lt;=n;i++)dis[i]=inf; \tdis[s]=0;\tq.push(make_pair(0,s));\tdijkstra();\tfor(int i=1;i&lt;=n;i++)printf(&quot;%d &quot;,dis[i]);&#125;\n四.质数1.素数筛（欧拉筛）#include&lt;bits/stdc++.h&gt;#define int long longusing namespace std;int n,p[10000005],cnt=0;bool np[10000005];void eusi(int x)&#123;\tnp[0]=np[1]=1;\tfor(int i=2;i&lt;=x;i++)\t&#123;\t\tif(!np[i])p[++cnt]=i;\t\tfor(int j=1;j&lt;=cnt;j++)\t\t&#123;\t\t\tif(i*p[j]&gt;x)break;\t\t\tnp[i*p[j]]=1;\t\t\tif(i%p[j]==0)break;\t\t&#125;\t&#125;&#125;signed main()&#123;\tcin&gt;&gt;n;\teusi(n);\tfor(int i=1;i&lt;=cnt;i++)cout&lt;&lt;p[i]&lt;&lt;&quot; &quot;;&#125;\n@其它1.快速幂int fastpow(int x,int n,int mod)&#123;\tint res = 1;\twhile(n)\t&#123;\t\tif(n&amp;1)res=res*x%mod;\t\tx=x*x%mod;\t\tn&gt;&gt;=1;\t&#125;\treturn res;&#125;\n\n2.字符串字典序排序bool cmp(char a[10],int l1,char b[20],int l2)&#123;    for(int i=0;i&lt;min(l1,l2);i++)if(a[i]!=b[i])return a[i]&lt;b[i];    return l1&lt;l2;&#125;\n","categories":["信息学"],"tags":["代码"]},{"title":"写一点关于《云的彼端，约定的地方》的看法","url":"/2023/06/12/%E5%86%99%E4%B8%80%E7%82%B9%E5%85%B3%E4%BA%8E%E3%80%8A%E4%BA%91%E7%9A%84%E5%BD%BC%E7%AB%AF%EF%BC%8C%E7%BA%A6%E5%AE%9A%E7%9A%84%E5%9C%B0%E6%96%B9%E3%80%8B%E7%9A%84%E7%9C%8B%E6%B3%95/","content":"写一点对《云的彼端，约定的地方》的看法\n\n总的来说，云彼依然继承了新海诚的作品的最大特点——异地恋，整个番里都充斥了伏笔，情节也依然十分感人，甚至因为是架空的故事，情感更加容易表达。对于我的话，印象最深的是：“救她还是救世界？”这个真的太经典了，特别是还诞生了一幅世界名画：黄昏之时。至于剧情，这算是新海诚作品里比较难懂的了，大概是因为早期作品，大概他有很多想法想表达出来，我个人喜欢有多重世界观的影片，云彼还是比较对口，它的多重世界观体现在了：梦境，但又与现实有一定的联系，但其中对于女主以及她的梦的介绍太少了，这大概也成为了它难懂的主要原因，从始至终三个少年关于造飞机去塔那边作为线索穿插在云彼其中，云彼好像又刻意用“10年后”这样的词省了不少剧情，这样做的好处就是突出了那三个少年各奔东西的结局，也真的算很能引起共鸣了。影片里还夹杂了一点反战的元素吧，其中的故事虽然架空，但又好像无不与战争有关，云彼从一开始也提出，日本因战争而分裂，奠定了云彼那点脆弱的美好。\n\n","categories":["评价","番剧","新海诚"],"tags":["评价","番剧","新海诚"]},{"title":"写一点关于《天气之子》的看法","url":"/2023/06/12/%E5%86%99%E4%B8%80%E7%82%B9%E5%85%B3%E4%BA%8E%E3%80%8A%E5%A4%A9%E6%B0%94%E4%B9%8B%E5%AD%90%E3%80%8B%E7%9A%84%E7%9C%8B%E6%B3%95/","content":"写一点关于《天气之子》的看法\n\n​        作为新海诚比较有代表性的一部作品，在剧情的处理方面自然是不俗的，就个人而言，天气之子是第三部能让人流泪的作品，它最主要的矛盾依然是她与世界间的抉择。它与其它番的关系，有点像是漫威那一系列影片那种，里面出现了言叶之庭的公园与你的名字中的男主，倒把这些散的东西放到一个城市里了。天气之子之所以能顺利的推进剧情，一定与开头帆高捡到的手枪脱不了关系。它中后期帆高逃离城市的一段真的有很强的代入感，大概也是因为他有一个真心的同伴。都说新海诚的番用心画风景，用脚画人，也不尽然，况且人物与景物之间不可避免会有对比。天气之子算是狡猾，看完之后那种Emo的感觉不全来源于帆高与阳菜挺有感染力的故事，还有很大一部分是来源于环境。仔细回想一下，其实天气之子用了很多好的视角，重点体现了周围环境的开阔，比如帆高与阳菜第一次登上废弃写字楼时，它用了旋转的视角转换来体现“开阔”二字，看到的人应该都会有一种头皮发麻的感觉。这个天然的Emo果实算是被天气之子吃干净了，除此之外它也善用了那种寂静所产生的压迫感：在高潮的时候，帆高踏入鸟居，一睁眼发现自己在空中坠落的寂静，它会自然而然的产生压迫感，像在为最后的抒情蓄势，而他们手拉手，BGM又响起，这是情感的迸发，包括最后一段他们再见也是一个道理。\n\n","categories":["评价","番剧","新海诚"],"tags":["评价","番剧","新海诚"]},{"title":"写一点关于《追风筝的人》的看法","url":"/2023/06/12/%E5%86%99%E4%B8%80%E7%82%B9%E5%85%B3%E4%BA%8E%E3%80%8A%E8%BF%BD%E9%A3%8E%E7%AD%9D%E7%9A%84%E4%BA%BA%E3%80%8B%E7%9A%84%E7%9C%8B%E6%B3%95/","content":"写一点关于《追风筝的人》的看法\n\n首先因为阿富汗的“消失”，这本书显得尤为珍贵，书中大体就分为了5个部分：①哈桑与阿米尔的童年生活，②阿米尔“背叛”哈桑，哈桑离开，③阿米尔与父亲逃到美国后的生活，④父亲死后，阿米尔成家，⑤阿米尔赎罪。本书的画风从二部分就已经开始质变了，而五部分有着很多对于阿富汗战争的描写，那里应该和大部分不了解的人的猜想截然不同，写了很多人们为了生活与善良而进行的妥协，很大程度上反映了阿富汗在20世纪末期的面貌，书中的对比比较出彩。由于书的开头是和平的，而后面却又是残酷的，它用了一个孩子的视角转变为一个成年人的怀念去描述这个国家，自从哈桑离开后，有很大一段文字他都是以主角的回忆的方式被提及，对于突出作者的负罪感有很大帮助，不同于其他书中的男主，受限于题材，作者笔下的阿米尔要更怯懦一点，但这样也有助于写出主角的心理历程，毕竟他在文末还是勇敢了一次。文中的伏笔也不在少数，很多看似配角的人物总是以意想不到的方式出现，让文章也充满了晴天霹雳，这倒不能算是惊喜，因为每个人的再度出现总是体现了一个个可悲的命运。这本书的人群密度很高。书中触动我最深的甚至不是主角找到关于自己同父异母的兄弟的真相，而是索拉伯听到自己要回孤儿院时被写了一页的“求求你，不要”，也很难想象一个刚被主角从塔利班手上救出来的孩子会选择自杀。作者的每一笔每一画都体现了那个阿富汗的混乱，点明了每个人物都有不能说出的秘密和被守护着的痛苦。\n\n","categories":["评价","番剧","新海诚"],"tags":["评价","番剧","新海诚"]},{"title":"网页工具","url":"/2023/05/27/%E7%BD%91%E9%A1%B5%E5%B7%A5%E5%85%B7/","content":"建议食用电脑以及WIFI以避免“ERR_CONNECTION_RESET”1.国内版ChatGPT ChatGPT\n\n\n\n2.随机图片生成（Lorem Picsum） Lorem Picsum\n\n\n3.数学工具集（Geogebra） Geogebra\n\n\n\n4.BiliBili工具（IBiliBili） IBiliBili\n\n\n\n5.网页便签PS：在网站后输入相同后缀可在多个平台共享内容\n Note.ms\n\n6.阿里巴巴矢量图库（IconFont） IconFont\n\n这货设置了X-Frame-Options，iframe真没法连接上 ↓\n\n\n","categories":["实用性"],"tags":["工具","收藏"]},{"title":"近期规划","url":"/2023/06/02/%E8%BF%91%E6%9C%9F%E8%A7%84%E5%88%92/","content":"近期规划高一准备冲一下实验班前五（少***！少***！少***！）期间重温一下信奥的东西尽量还是别当社交黑洞了ʕ  •ᴥ•ʔ……呃呃呃，还有就是把B站的追番清一清。。。","categories":["个人"],"tags":["计划","个人"]},{"title":"Hexo建站的一些侧面","url":"/2023/06/04/Hexo%E5%BB%BA%E7%AB%99%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BE%A7%E9%9D%A2/","content":"一.利用Hexo建站 ( 使用GitHub作为Git库 ) ( 必看)关于利用 Hexo  + GitHub 建立一个个人博客网上已经有了很多教程了推荐：Github + Hexo 搭建个人博客超详细教程 PS：绝对不是我懒得抄\n二.使用Gitee作为Git库虽然说GitHub是最有名的平台，但是由于是米国的，对于国内的用户并不友好，有时候会被墙掉，能不能访问完全看脸，所以国内的码云（Gitee ）也有一部分优势（两者其实差不多，这么说岂不是压倒性胜利了？）。\nPS：GitHub是上传后自动更新，Gitee要手动刷新一下\n三.补充：同步上传到GitHub和Gitee如果你完成了以上步骤，应该不难发现，Hexo的主要配置文件（一般只需要改这个）就是网页源码根目录下的 “_config.yml” 。而Hexo的部署（上传）对象的根据就是 “__config.yml” 中的 “Deployment” 部分。所以想要同时部署两个地址的话，只需要把 “Deployment” 的部分改成：\n# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy:  type: git  repository:     gitee:      # &lt;你的Gitee库地址&gt;       github:      # &lt;你的GitHub库地址&gt;  branch: main   # master  # &lt;两个库的分支，如果不一样建议创建为相同的&gt;\n\n下一次部署的时候Hexo会分别向两个库提交新版本。\n四.可能遇到的一些问题及解决方法1.Hexo报错 ERROR Deployer not found: git这是因为没安装hexo-deployer-git插件，在网页源码根目录下打开命令行输入：\nnpm install hexo-deployer-git --save\n\n之后再输入hexo d部署就行了。\n2.Hexo上传Git库速度陡降可能是因为多次生成产生了冗余。\n使用hexo clean清除缓存，如果删除时卡住，请手动执行：找到网页源码根目录下的 “public” 与 “.deploy_git” 文件夹，将其删除后重试。\n3.上传后Git库不更新由于Hexo没有检测到更新，并没有进行推送操作，所以需要删除老版本：网页源码根目录下的 “.deploy_git” 文件夹。\n4.Hexo报错Error：spawn failed可能还会报错:\nfatal: cannot lock ref &#39;HEAD&#39;: unable to resolve reference HEAD: Invalid argumenterror: src refspecerror: src refspec HEAD does not match any.\n原因是本地git推送时对内容的结束符进行了不适当更改，\n使用：\ngit config --global core.autocrlf false\n\n关闭此功能。\n再删除已生成文件：根目录下的 “.deploy_git” 文件夹。\n5.npm 在执行install时卡住网络问题（毕竟国外的东西）。\n需要更改npm镜像地址（这里使用淘宝的镜像），使用命令行键入：\nnpm config set registry https://registry.npm.taobao.org\n\n\n\n五.主题建站后需要选择一个中意的博客主题，Hexo自带了300+款主题 （点击图片为示例，点击名称为下载地址），每一个都有示例网页。下载解压好后把文件放在根目录下的 “theme” 文件夹里（以一级文件夹的形式），并把Hexo的 “_config.yml” 中的 theme 项改为放入 “theme” 文件夹的主题文件夹名称：\n# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: 主题名称A   # &lt;你的主题&gt;  \n\n\nPS：选主题很重要，选好后很多个性化需要更改主题的配置文件，每个主题的文件结构不同，再更改很麻烦。\n一般主题会有自己的教程网站以帮助用户实现不同功能（具体请自行搜索），建议先完整浏览一遍，避免额外安装插件时与主题冲突（这种情况其实挺多的）。\n","categories":["实用性","教程"],"tags":["工具","教程"]},{"title":"随笔（22.6.15）","url":"/2023/05/27/%E9%9A%8F%E7%AC%94%EF%BC%8822.6.15%EF%BC%89/","content":"\n  5df0d130e4f0548e32e2b4f7f765568bcfa7a869e8f75ff3a90e675d9523f28cde12e8bde385afae80a193373eab90dee314c413d547c716f89eeda850733826e374cf5c87a9deb2cb64f7077b80dda0f583e1645f557ce923ffcef321dd604476efe95b794642260b8deadb3f82b30334129dba89a74d3a5357957f2757a2de111c36819d5addf6a0072d3030e3347941f28df33c91f65ee0534c40316484b33091e35eeccda48137f8e6d69577004e52edab53516d7aad3593d04d1ecb719ac0901b0d132ed7f7fef4e63bed3621785d7e98bca6ef9d5c05354f9bfff20e8ef8598c966f8f90cbfdb67954de3558603b591a35af3f2def564c3dd00e9fa414689a7ddc765318384917fe7f41a7b39415761c97c8e29172fce0fa5162a1fde667d02dbbb80180c8bd2715b42aad5f7a7f8d3f015a56b8d60964c04f8d2106c3e94b9600117fd9a62f381d6e41e41ad9ae3f41d6bafb4bf0fbcfd3a13a561f71fc15c5c0ef41d6fae8c589dc7f8f2ff00ca50eea62a61e508f320da71f9a43b06a4e4ee91a3333c2b0ae1a337703ffacf86d38d3b7ef7d74e86796bb32b07aae698f3d9895821de5a0892cfaffc05cb405b33ae4c075b7588575bd34b6f845df03cde4a09fdf9fb0cf9bd2c1828638ebd462d6fb1f55ce2662d0cd18387e491efdf804ece21d78b350515d118c632c4345bd2bb70e312acd7a2af4df4c97741b5fb7fcfabc8de27cef66b6a4cce9d9b97a297369d1e0f2963cf2089ad4b245d75ccd2b77ff57b9139e683c03276f3aaaccf64a457b8dbc931cd1b7d789170d02e075b1cc5d429af32599b03fe06d6d5691159ca68c735d75ce2a7910d18f71ffee851d7935039bbcd9fb70575515565fc692007551ec85075bc0223abc92e35f939a1901892fc322962fb2c49bf52fb37379e7c2b0bd34b60ace5aa10b6b5c704b6b71e83f0e46e0fe7130af026c153a89311ed3ac79b4eccd0a2bade44a2605f35bf4ea33dff7cc0659af2c20359765dc1e6279fc0d673270c94e5792c07499cc7d7627cced7a3e6d80a3c905a1cca513220265898912157bc99cd2116705f58544d2ecc21dfa99a40476944fa6598eb516943cb875f7952d6b12b5589d642346dbc40289efee3e71f15f8405b849d13a35d982c93090ff9387929efbb6249d8c37237be2be1d3a89b74326e7658b3da1c6af9fdb9a2b2ed97eb317df9cfeccde6395a7e25e0a7ea3a808e3b533bca04bec1bd22564cc379d7038e02271ed8f9e00eb93f7e88bbd9a09368ea034c92436035016c12d0dbae3a4598cfcbd398b06493fb5402c394c07c04bfcbbca4d6c916fcf7297c65eb83181fffd38739072aaf273ea78c3f1bae4f5276c8db197aa61e9a04d1153018339ceaa7fd150a0cf67a5492a3bd607d701d30f2262fd287a3fbf724f5c9ff4607117a57a7ed12a447bc0af8ec25334b3ab31e1550db528681875a934b2d6fd7f3ab1c6c4e4ff524a6158a3eb8b33d581586450701976dc32bd7bb655f03691811574d494a8bba0356c4553b7be076e614688d9838410c36c5831bfd096f125ff6c727864537a8a5498b8a4a637644a3ce313a636db169bd7d6be01e4db16eecc380fcc737a700024bde3f3ababa1f68ac570a6c2b72380dc4f180405e0ebc17ef75767749463bce1e91a1e6456faacaaa14e87a308b3df28eaa58eacba2e8779d939b72097ef18398663babfe2e1c63d3209c3b547a270e9480fee8475cce25e091d917f09d79ec4dd6ec869d9aa710ec44912fba23cd296e5ad8f571766e03a04b76cb41f4b5aad8632e56fa9e0939123acc92768637b814e7c0c2ac56105b6fe25bd9e0966ff9c0377319df827abdda614325ee530307fc8751ee5c15dfc7dda91f5423ca86d7e85182e7999150308174bcecb8a5109ce01825948ff9aec3bf4eeeba83c7222e3366ab93d4d7fa1578f1c62d5eddb95b43d448b195402ddb6fa1c9654f3ed9af1b8a66d8ba455367319f2bfa438c4c078a31f4525dde3fcaccf3f5221177ddbd9986f53e2478cb68fc97c63e594d7318621ec98eeaf20e42de278a8385da8cc3dba8369512c2c7e6a11a79d7a6b86df400fa73833272b3e7d9a684e6ee81079b8d1b7a556bda35b5144609ca35a5537965ccc135202e390ed3873ced63353760838b227309ea48f346b760d57ba1544857124c1469450f171c5b717ed77d78acedfd608eb57e9de0e2a9ddb511150e0885b107fb03f82540b6f43511aebf91035b30ceedc2ca6292f49780c3b47ff5a5f2343da5ef0ccf8c7e4c52a86127466aca860ec59eca0a9d376bfbb3310de068740df51beb08dae79592dbeb1fa0661ac301d3da03467b943a15e5fbe2fb79d5f0d76864190ce18bca02ccecbebdc7120b23077a8417eb4101c4a381eeeb283f6047e418c6279580780e96f680ce219e8a4d7ffc1cbe46cb1f41d59b82dc041d449b401c0774805a6d514b27e6a774d1d3456b1f2987fc5a3a16801f2f6100a13da7a85b7c82322433697491258aebb7fabb4e59f25df76294b0f54d16c6a2abfcb5162aa8fc5e4abfbc5a4417a9bfcd4250ac1850625238b3e1871fc0eb7ef6981c6072998af15e1db6c724e7b498fba217ae461da2ea7614255dea8b8f0d096c734be2f38a0d7bcce5f89282d4c99e8f691fcdf8584b839653c5b9aa34cfce57ecef11f170ea6f185b24add5d71ff8ffce55bacc7631a70ce3a8f982e1a76759dd3d9133988c41aa3642ac4edb72a918060b969643341b3c3e54375e288b6d48682821f8510752ce2f1b87f625ef5b709dc0611d80ee6d6717b8ff9de86b828b65deeb73ca56402301b1ffbb7c4bf2265cdd740209d9f3cc80e2e58ac9384a0b088cc4930a6d4195bf77df52fd82a61c0c92a22de5956648b6c9cb5d1dbd08a9f3d505a18cdec82db476903706870a4eefbe7b34468686b864cc928b576030821dfc944af8e538a87089dcbd5f7499f7ea37a598e66d96c1c8408a99c12dd7d95f5e6ea703e160856fd497cd23f6949e9e1c45648a6bc872b32160c3b3dd7899dc57cf3372f1df5ea876aae3f897fe1e02a71335a8b9c619df745e843e86d8a61f62754d55d900e29ac1fd1a128b81dec895d2fc269ea1b8e46ccbc90bcdbf70796b43cc3dc9795e2ef106f585bd2aaaa02b4297d760ed4b7c5beea2bc829c43580d705cd80a0fc1d62e024afa2dd1e22f676e01e296fbc379bc1d0813d87f6c49b915fc12ec055a958daa6e8c49b3a7ab41dab801ce189ebef011e898f35446ad4d9c81ed861e43dbae06a0302b4bf19db96d19729630445152082702b9365bea4080ee8cd0b80fcb8bbc077cd910f\n  \n    \n      \n      \n        输入密码以解锁.\n      \n      \n        \n        \n      \n    \n  \n\n","categories":["个人"],"tags":["个人","Emotions","保密"]}]